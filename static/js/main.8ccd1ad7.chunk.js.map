{"version":3,"sources":["components/images/Luffy.png","components/images/Sanji.png","components/images/Usopp.png","components/images/zorro.png","components/images/Nami.png","components/images/brooks.png","components/images/onepiece.png","components/Login.js","components/NavBar.js","components/messages.js","components/EndGame.js","components/images/index.js","components/Images.js","components/Game.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","handleChange","e","setState","name","target","value","handleClick","preventDefault","props","className","type","placeholder","onChange","this","required","onClick","Component","NavBar","score","messages","title","message","EndGame","newGame","sort","Math","random","React","images","pic","Luffy","flipped","Sanji","Usopp","Zorro","Nami","Brooks","Images","onePiece","characters","event","character","getAttribute","switch","push","length","checkName","shift","document","getElementsByClassName","endGame","reset","i","classList","add","setAttribute","character1","character2","remove","map","element","style","background","check","Game","Main","showLogIn","showEndGame","handleLogin","boolean","handleEndGame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,sC,4LCmC5BC,E,4MAhCbC,MAAQ,G,EACRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAEG,OAAOC,S,EAEjCC,YAAc,SAACL,GACbA,EAAEM,iBACF,EAAKC,MAAML,KAAK,EAAKJ,MAAMI,MAAM,I,uDAGjC,OACE,yBAAKM,UAAU,mBACb,yBAAKA,UAAU,SACb,8BACE,yBAAKA,UAAU,cACb,wCAAoB,6BACpB,2BACEC,KAAK,OACLC,YAAY,aACZF,UAAU,eACVG,SAAUC,KAAKb,aACfc,UAAQ,IAEV,uDAEF,4BAAQC,QAASF,KAAKP,aAAtB,iB,GAzBQU,aCaLC,E,uKAZH,IAAD,EACiBJ,KAAKL,MAArBL,EADD,EACCA,KAAMe,EADP,EACOA,MACd,OACE,yBAAKT,UAAU,UACb,yBAAKA,UAAU,cAAf,UACA,yBAAKA,UAAU,eAAf,SAAoCN,GACpC,yBAAKM,UAAU,SAAf,UAA+BS,Q,GAPlBF,aCFVG,EAAW,CAClB,CAAEC,MAAO,YAAaC,QAAS,yBAE/B,CAAED,MAAO,WAAYC,QAAS,oCAE9B,CACED,MAAO,cACPC,QAAS,6CAEX,CAAED,MAAO,aAAcC,QAAS,yCCcrBC,E,4MAnBbhB,YAAc,WACZ,EAAKE,MAAMe,SAAQ,I,uDAInB,OADAJ,EAASK,MAAK,kBAAMC,KAAKC,SAAW,MAElC,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,WACb,4BAAKU,EAAS,GAAGC,OACjB,2BAAID,EAAS,GAAGE,SAChB,4BAAQZ,UAAU,kBAAkBM,QAASF,KAAKP,aAAlD,kB,GAXYqB,IAAMX,W,kHCKjBY,EAAS,CAClB,CACEzB,KAAM,QACN0B,IAAKC,IACLC,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKG,IACLD,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKI,IACLF,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKK,IACLH,SAAS,GAEX,CACE5B,KAAM,OACN0B,IAAKM,IACLJ,SAAS,GAEX,CACE5B,KAAM,SACN0B,IAAKO,IACLL,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKC,IACLC,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKG,IACLD,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKI,IACLF,SAAS,GAEX,CACE5B,KAAM,QACN0B,IAAKK,IACLH,SAAS,GAEX,CACE5B,KAAM,OACN0B,IAAKM,IACLJ,SAAS,GAEX,CACE5B,KAAM,SACN0B,IAAKO,IACLL,SAAS,ICcEM,GDVUC,I,4MCnEvBC,WAAa,G,EACbjC,YAAc,SAACkC,GACb,IAAIC,EAAYD,EAAMpC,OACtB,GAAwC,UAApCqC,EAAUC,aAAa,WAIvBD,IAAc,EAAKF,WAAW,IAChC,EAAKI,OAAOF,GACZ,EAAKF,WAAWK,KAAKH,KAErB,EAAKE,OAAOF,GACZ,EAAKF,WAAa,IAGhB,EAAKA,WAAWM,OAAS,IACtB,EAAKC,UAAU,EAAKP,WAAW,GAAI,EAAKA,WAAW,KAMtD,EAAKA,WAAWQ,QAChB,EAAKR,WAAWQ,UANhB,EAAKJ,OAAO,EAAKJ,WAAW,IAC5B,EAAKI,OAAO,EAAKJ,WAAW,IAC5B,EAAKA,WAAWQ,QAChB,EAAKR,WAAWQ,UAMFC,SAASC,uBAAuB,eAClCJ,OAAS,GAAG,CAC1B,EAAKrC,MAAM0C,SAAQ,GAEnB,IADA,IAAIC,EAAQH,SAASC,uBAAuB,SACnCG,EAAI,EAAGA,EAAID,EAAMN,OAAQO,IAChCD,EAAMC,GAAGC,UAAUC,IAAI,eACvBH,EAAMC,GAAGG,aAAa,QAAS,SAC/B,EAAKhB,WAAa,K,EAKxBO,UAAY,SAACU,EAAYC,GACvB,OAAID,EAAWd,aAAa,UAAYe,EAAWf,aAAa,UAC9Dc,EAAWD,aAAa,QAAS,SACjCE,EAAWF,aAAa,QAAS,UAC1B,I,EAKXZ,OAAS,SAACvC,GAC6B,SAAjCA,EAAOsC,aAAa,UACtBtC,EAAOmD,aAAa,QAAS,SAC7BnD,EAAOiD,UAAUC,IAAI,iBAErBlD,EAAOmD,aAAa,QAAS,QAC7BnD,EAAOiD,UAAUK,OAAO,iB,uDAGlB,IAAD,OACP,OACE,yBAAKjD,UAAU,UACZmB,EACEJ,MAAK,kBAAMC,KAAKC,SAAW,MAC3BiC,KAAI,SAACC,GACJ,OACE,yBACEnD,UAAU,oBACVN,KAAMyD,EAAQzD,KACd0D,MAAO,CAAEC,WAAW,OAAD,OAASF,EAAQ/B,IAAjB,MACnBkC,MAAM,QACNhD,QAAS,EAAKT,sB,GArETU,cCUNgD,E,uKARX,OACE,yBAAKvD,UAAU,QACb,kBAAC,EAAD,CAAQyC,QAASrC,KAAKL,MAAM0C,e,GAJjBvB,IAAMX,WCiCViD,E,4MA7BblE,MAAQ,CACNI,KAAM,GACNe,MAAO,EACPgD,WAAW,EACXC,aAAa,G,EAEfC,YAAc,SAACjE,EAAMkE,GACnB,EAAKnE,SAAS,CAAEC,KAAMA,EAAM+D,UAAWG,K,EAEzCC,cAAgB,SAACD,GACXA,EACF,EAAKnE,SAAS,CAAEiE,YAAaE,EAASnD,MAAO,EAAKnB,MAAMmB,MAAQ,IAEhE,EAAKhB,SAAS,CAAEiE,YAAaE,K,uDAGvB,IAAD,EACsCxD,KAAKd,MAAzCI,EADF,EACEA,KAAKe,EADP,EACOA,MAAMiD,EADb,EACaA,YAAYD,EADzB,EACyBA,UAChC,OACE,6BACGA,EAAY,kBAAC,EAAD,CAAO/D,KAAMU,KAAKuD,cAAkB,KAChDD,EAAc,kBAAC,EAAD,CAAS5C,QAASV,KAAKyD,gBAAoB,KAC1D,kBAAC,EAAD,CAAQnE,KAAMA,EAAMe,MAAOA,IAC3B,kBAAC,EAAD,CAAMgC,QAASrC,KAAKyD,qB,GAxBTtD,aCMJuD,MARf,WACE,OACE,yBAAK9D,UAAU,OACb,kBAAC,EAAD,QCKc+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/B,SAASgC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnE,c","file":"static/js/main.8ccd1ad7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Luffy.4c243461.png\";","module.exports = __webpack_public_path__ + \"static/media/Sanji.dd555cc4.png\";","module.exports = __webpack_public_path__ + \"static/media/Usopp.6a39bfa7.png\";","module.exports = __webpack_public_path__ + \"static/media/zorro.a90fd395.png\";","module.exports = __webpack_public_path__ + \"static/media/Nami.56e3e48d.png\";","module.exports = __webpack_public_path__ + \"static/media/brooks.67381f9a.png\";","module.exports = __webpack_public_path__ + \"static/media/onepiece.4f52850f.png\";","import React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = {};\r\n  handleChange = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.name(this.state.name, false);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Name:</label><br/>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n              <small>This is memory game</small>\r\n            </div>\r\n            <button onClick={this.handleClick}>Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const { name, score } = this.props;\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"game-title\">Memory</div>\r\n        <div className=\"player-name\">Name: {name}</div>\r\n        <div className=\"score\">Score: {score}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","export let messages = [\r\n    { title: \"Well Done\", message: \"How about another go?\" },\r\n  \r\n    { title: \"Good Job\", message: \"I bet you can not do that again?\" },\r\n  \r\n    {\r\n      title: \"Look at you\",\r\n      message: \"You think you can do it faster next time?\",\r\n    },\r\n    { title: \"Way to go!\", message: \"That was lightening fast, Try again?\" },\r\n  ];","import React from \"react\";\r\nimport { messages } from \"./messages\";\r\n\r\nclass EndGame extends React.Component {\r\n  handleClick = () => {\r\n    this.props.newGame(false);\r\n  };\r\n  render() {\r\n    messages.sort(() => Math.random() - 0.5);\r\n    return (\r\n      <div className=\"end-game\">\r\n        <div className=\"message\">\r\n          <h2>{messages[0].title}</h2>\r\n          <p>{messages[0].message}</p>\r\n          <button className=\"btn btn-primary\" onClick={this.handleClick}>\r\n            Go Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EndGame;","import Luffy from \"./Luffy.png\";\r\nimport Sanji from \"./Sanji.png\";\r\nimport Usopp from \"./Usopp.png\";\r\nimport Zorro from \"./zorro.png\";\r\nimport Nami from \"./Nami.png\";\r\nimport Brooks from \"./brooks.png\";\r\nimport onePiece from \"./onepiece.png\";\r\n\r\nexport let images = [\r\n  {\r\n    name: \"Luffy\",\r\n    pic: Luffy,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Sanji\",\r\n    pic: Sanji,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Usopp\",\r\n    pic: Usopp,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Zorro\",\r\n    pic: Zorro,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Nami\",\r\n    pic: Nami,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Brooks\",\r\n    pic: Brooks,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Luffy\",\r\n    pic: Luffy,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Sanji\",\r\n    pic: Sanji,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Usopp\",\r\n    pic: Usopp,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Zorro\",\r\n    pic: Zorro,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Nami\",\r\n    pic: Nami,\r\n    flipped: false,\r\n  },\r\n  {\r\n    name: \"Brooks\",\r\n    pic: Brooks,\r\n    flipped: false,\r\n  },\r\n];\r\n\r\nexport const blankCard = onePiece;","import React, { Component } from \"react\";\r\nimport { images } from \"./images/index\";\r\n\r\nclass Images extends Component {\r\n  characters = [];\r\n  handleClick = (event) => {\r\n    let character = event.target;\r\n    if (character.getAttribute(\"check\") === \"found\") {\r\n      return;\r\n    }\r\n\r\n    if (character !== this.characters[0]) {\r\n      this.switch(character);\r\n      this.characters.push(character);\r\n    } else {\r\n      this.switch(character);\r\n      this.characters = [];\r\n    }\r\n\r\n    if (this.characters.length > 2) {\r\n      if (!this.checkName(this.characters[0], this.characters[1])) {\r\n        this.switch(this.characters[0]);\r\n        this.switch(this.characters[1]);\r\n        this.characters.shift();\r\n        this.characters.shift();\r\n      } else {\r\n        this.characters.shift();\r\n        this.characters.shift();\r\n      }\r\n    }\r\n    let allPictures = document.getElementsByClassName(\"image-blank\");\r\n    if (allPictures.length < 1) {\r\n      this.props.endGame(true);\r\n      let reset = document.getElementsByClassName(\"image\");\r\n      for (let i = 0; i < reset.length; i++) {\r\n        reset[i].classList.add(\"image-blank\");\r\n        reset[i].setAttribute(\"check\", \"false\");\r\n        this.characters = [];\r\n      }\r\n    }\r\n  };\r\n\r\n  checkName = (character1, character2) => {\r\n    if (character1.getAttribute(\"name\") === character2.getAttribute(\"name\")) {\r\n      character1.setAttribute(\"check\", \"found\");\r\n      character2.setAttribute(\"check\", \"found\");\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  switch = (target) => {\r\n    if (target.getAttribute(\"check\") === \"true\") {\r\n      target.setAttribute(\"check\", \"false\");\r\n      target.classList.add(\"image-blank\");\r\n    } else {\r\n      target.setAttribute(\"check\", \"true\");\r\n      target.classList.remove(\"image-blank\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"images\">\r\n        {images\r\n          .sort(() => Math.random() - 0.5)\r\n          .map((element) => {\r\n            return (\r\n              <div\r\n                className=\"image image-blank\"\r\n                name={element.name}\r\n                style={{ background: `url(${element.pic})` }}\r\n                check=\"false\"\r\n                onClick={this.handleClick}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\nimport Images from \"./Images\";\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <Images endGame={this.props.endGame} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport NavBar from \"./NavBar\";\r\nimport EndGame from \"./EndGame\";\r\nimport Game from \"./Game\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    name: \"\",\r\n    score: 0,\r\n    showLogIn: true,\r\n    showEndGame: false,\r\n  };\r\n  handleLogin = (name, boolean) => {\r\n    this.setState({ name: name, showLogIn: boolean });\r\n  };\r\n  handleEndGame = (boolean) => {\r\n    if (boolean) {\r\n      this.setState({ showEndGame: boolean, score: this.state.score + 1 });\r\n    } else {\r\n      this.setState({ showEndGame: boolean });\r\n    }\r\n  };\r\n  render() {\r\n      const {name,score,showEndGame,showLogIn} = this.state\r\n    return (\r\n      <div>\r\n        {showLogIn ? <Login name={this.handleLogin} /> : null}\r\n        {showEndGame ? <EndGame newGame={this.handleEndGame} /> : null}\r\n        <NavBar name={name} score={score} />\r\n        <Game endGame={this.handleEndGame} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}